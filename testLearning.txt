// using System;
// using System.Net.Http;
// using System.Threading.Tasks;
// using System.IO;
// using HtmlAgilityPack;
// using System.Text.RegularExpressions;
// using System.Text.Json;
// using System.Collections.Generic;
// using System.Linq;

// public class SentenceLearner
// {
//     public List<string> UrlList { get; set; } = new List<string>();
//     public Dictionary<string, int> WordsWeights { get; set; } = new Dictionary<string, int>();
//     public string JsonPath { get; set; } = "nunsenseWords.json";

//     public SentenceLearner() { }

//     public async Task SentenceLearnerPlus(string url)
//     {
//         System.Console.WriteLine("SentenceLearnerPlus");
//         if (UrlList.Contains(url))
//         {
//             Console.WriteLine("We already learned this page!");
//             return;
//         }
//         else if (url.Contains("fa."))
//         {
//             // 

//             UrlList.Add(url);

//             using HttpClient client = new HttpClient();
//             string htmlContent = await client.GetStringAsync(url);

//             if (string.IsNullOrEmpty(htmlContent))
//             {
//                 Console.WriteLine("صفحه خالی یا نامعتبر است.");
//                 return;
//             }

//             HtmlDocument doc = new HtmlDocument();
//             doc.LoadHtml(htmlContent);

//             HtmlNodeCollection paras = doc.DocumentNode.SelectNodes("//p");

//             if (paras != null)
//             {
//                 string orginalLabel = "";
//                 foreach (HtmlNode p in paras)
//                 {
//                     if (p != null)
//                     {
//                         string label = p.InnerText.Trim();
//                         label = Regex.Replace(label, @"[^\u0600-\u06FFa-zA-Z0-9\s]", "");
//                         label = label.Replace("\n", " ");

//                         if (!string.IsNullOrEmpty(label))
//                         {
//                             orginalLabel += label;
//                         }
//                     }
//                 }

//                 ProcessingTheSentence(orginalLabel);
//             }
//         }
//         else
//         {
//             System.Console.WriteLine(url);
//             System.Console.WriteLine("The page is not persian!");
//         }
//     }

//     private void ProcessingTheSentence(string para)
//     {
//         System.Console.WriteLine("ProcessingTheSentence");
//         var wordsList = new List<string>(para.Split(" ", StringSplitOptions.RemoveEmptyEntries));

//         foreach (string word in wordsList)
//         {
//             if (WordsWeights.ContainsKey(word))
//                 WordsWeights[word]++;
//             else
//                 WordsWeights.Add(word, 1);
//         }

//         int step = WordsWeights.Count / 30;
//         foreach (string word in WordsWeights.Keys.ToList())
//         {
//             if (WordsWeights[word] < step)
//                 WordsWeights.Remove(word);
//         }

//         Merging(WordsWeights);
//     }

//     public void Merging(Dictionary<string, int> wordsWeight)
//     {
//         System.Console.WriteLine("Merging");
//         Dictionary<string, int> loadedDict = new();

//         if (File.Exists(JsonPath))
//         {
//             try
//             {
//                 string jsonText = File.ReadAllText(JsonPath);
//                 loadedDict = JsonSerializer.Deserialize<Dictionary<string, int>>(jsonText);
//             }
//             catch
//             {
//                 Console.WriteLine("خطا در خواندن nunsenseWords.json");
//             }
//         }

//         foreach (var pair in loadedDict)
//         {
//             if (!wordsWeight.ContainsKey(pair.Key))
//                 wordsWeight[pair.Key] = pair.Value;
//             else
//                 wordsWeight[pair.Key] += pair.Value;
//         }

//         File.WriteAllText(JsonPath, JsonSerializer.Serialize(wordsWeight, new JsonSerializerOptions { WriteIndented = true }));

//         // ذخیره کل شیء در LearningObject.json
//         File.WriteAllText("LearningObject.json", JsonSerializer.Serialize(this, new JsonSerializerOptions { WriteIndented = true }));
//     }

//     public async Task LearningAllLinks(string url)
//     {
//         System.Console.WriteLine("LearningAllLinks");
//         using HttpClient clientLinks = new HttpClient();
//         string htmlContent = await clientLinks.GetStringAsync(url);
//         if (string.IsNullOrEmpty(htmlContent))
//         {
//             Console.WriteLine("صفحه خالی یا نامعتبر است.");
//             return;
//         }
//         HtmlDocument doc = new HtmlDocument();
//         doc.LoadHtml(htmlContent);
//         HtmlNodeCollection links = doc.DocumentNode.SelectNodes("//a[@href]");
//         if (links == null || links.Count == 0)
//         {
//             Console.WriteLine("We could not find Links!");
//             return;
//         }
//         foreach (var link in links)
//         {
//             string href = link.GetAttributeValue("href", string.Empty);
//             // اگر لینک کامل نیست (relative)، آن را به url پایه وصل کن (در صورت نیاز)
//             if (!string.IsNullOrEmpty(href) && Uri.IsWellFormedUriString(href, UriKind.Absolute))
//             {
//                 await SentenceLearnerPlus(href);
//             }
//         }
//     }
// }
